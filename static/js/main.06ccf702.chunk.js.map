{"version":3,"sources":["components/Home.js","Contact.js","components/BreadCrumbs.js","components/Blog.js","components/Code.js","components/Connect.js","components/Main.js","App.js","serviceWorker.js","index.js"],"names":["Home","_linkToBlog","setTimeout","props","history","push","_linkToCode","_linkToConnect","style","paddingTop","height","paddingBottom","options","strings","autoStart","loop","display","flexDirection","marginTop","marginBottom","justifyContent","className","IconButton","onClick","this","background","width","src","alt","marginRight","marginLeft","Component","withRouter","Blog","_linkToHome","blogs","ListItem","button","alignItems","map","blog","index","date","moment","published_at","fromNow","key","title","description","link","BlogItem","_linkToBlogLink","window","location","href","padding","textDecoration","color","Code","repos","repo","pushed_at","name","Button","homepage","textTransform","outline","variant","startIcon","html_url","Connect","_copyEmailToClipboard","setState","justCopiedEmailToClipboard","_closeSnackbar","state","bind","classes","text","image","connection","Snackbar","open","onClose","autoHideDuration","message","SnackbarContent","backgroundColor","fontFamily","ConnectionItem","_linkToConnectionLink","Main","exact","path","App","getGithubData","getMediumData","fetch","then","res","json","data","console","log","posts","items","filter","item","categories","length","forEach","post","node","tag","document","createElement","innerHTML","contentArr","innerText","split","i","blogObj","pubDate","catch","error","owner","login","resRepos","resRepo","created_at","sort","a","b","Date","basename","process","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"8RASMA,E,4MAEJC,YAAc,WACZC,YAAW,WAAO,EAAKC,MAAMC,QAAQC,KAAK,WAAW,M,EAGvDC,YAAc,WACZJ,YAAW,WAAO,EAAKC,MAAMC,QAAQC,KAAK,WAAW,M,EAGvDE,eAAiB,WACfL,YAAW,WAAO,EAAKC,MAAMC,QAAQC,KAAK,cAAc,M,uDAIxD,OACE,6BAEE,wBACEG,MAAO,CACLC,WAAY,OACZC,OAAQ,IACRC,cAAe,KAEf,kBAAC,IAAD,CACEC,QAAS,CACPC,QAAS,CAAC,qBAAsB,qBAAsB,mCACtDC,WAAW,EACXC,MAAM,MAKd,yBACEP,MAAO,CACLQ,QAAS,OACTC,cAAe,MACfC,UAAW,GACXC,aAAc,GACdC,eAAgB,WAMpB,0BAAMC,UAAU,gBACd,kBAACC,EAAA,EAAD,CACEC,QAASC,KAAKlB,YACdE,MAAO,CACLiB,WAAY,WAEdJ,UAAU,WACV,yBACAX,OAAO,KACPgB,MAAM,KACNC,IAAI,aAAaC,IAAI,MAEvB,wBAAIP,UAAU,gBAAd,SAIF,0BACEb,MAAO,CACLqB,YAAa,GACbC,WAAY,IAEdT,UAAU,gBACV,kBAACC,EAAA,EAAD,CACEC,QAASC,KAAKvB,YACdO,MAAO,CACLiB,WAAY,WAEdJ,UAAU,WAEV,yBACAX,OAAO,KACPgB,MAAM,KACNC,IAAI,aAAaC,IAAI,MAEvB,wBAAIP,UAAU,gBAAd,SAIF,0BAAMA,UAAU,gBACV,kBAACC,EAAA,EAAD,CACEC,QAASC,KAAKjB,eAEdC,MAAO,CACLiB,WAAY,WAEdJ,UAAU,WACV,yBACAX,OAAO,KACPgB,MAAM,KACNC,IAAI,gBAAgBC,IAAI,MAE1B,wBAAIP,UAAU,gBAAd,kB,GAhGKU,aA6GJC,cAAWhC,G,GCnHJ+B,Y,UCCIA,Y,wBCKpBE,E,4MAEFC,YAAc,WACVhC,YAAW,WAAO,EAAKC,MAAMC,QAAQC,KAAK,OAAO,M,uDAG3C,IACE8B,EAAUX,KAAKrB,MAAfgC,MACR,OACI,yBAAKd,UAAU,qFACX,yBAAKA,UAAU,qBAEX,kBAACe,EAAA,EAAD,CACIC,QAAM,EACNd,QAASC,KAAKU,YACd1B,MAAO,CACHQ,QAAS,OACTC,cAAe,MAEfqB,WAAY,SACZpB,UAAW,GACXT,WAAY,GACZE,cAAe,KAEnB,yBACID,OAAO,KACPgB,MAAM,KACNC,IAAI,aAAaC,IAAI,KACzB,wBACIP,UAAU,YACVb,MAAO,CACHkB,MAAO,OACPI,WAAY,KAJpB,wBAWJ,6BACCK,EAAMI,KAAI,SAACC,EAAMC,GACd,IAAMC,EAAOC,IAAOH,EAAKI,cAAcC,UACvC,OACI,yBAAKC,IAAKL,GACN,kBAAC,EAAD,CACIM,MAAOP,EAAKO,MACZL,KAAMA,EACNM,YAAaR,EAAKQ,YAClBC,KAAMT,EAAKS,OAEf,uC,GAlDblB,aA4DbmB,E,4MAEFC,gBAAkB,WACdjD,YAAW,WACPkD,OAAOC,SAASC,KAAO,EAAKnD,MAAM8C,OACnC,M,uDAIH,OACI,kBAACb,EAAA,EAAD,CACIC,QAAM,EACNd,QAASC,KAAK2B,gBACd3C,MAAO,CACHQ,QAAS,OACTC,cAAe,MACfG,eAAgB,eAChBmC,QAAS,KAEb,0BACIlC,UAAU,YACVb,MAAO,CACHkB,MAAO,SAEX,uBAEIlB,MAAO,CACHgD,eAAgB,SAEpB,wBACAhD,MAAO,CAACiD,MAAO,YACbjC,KAAKrB,MAAM4C,QAEjB,2BAAG,yCAAevB,KAAKrB,MAAMuC,OAC7B,2BAAIlB,KAAKrB,MAAM6C,mB,GAlCZjB,aAyCRC,cAAWC,G,0CCrGpByB,E,4MAEFxB,YAAc,WACVhC,YAAW,WAAO,EAAKC,MAAMC,QAAQC,KAAK,OAAO,M,uDAG3C,IACEsD,EAAUnC,KAAKrB,MAAfwD,MACR,OACI,yBAAKtC,UAAU,qFACX,yBAAKA,UAAU,qBAGX,kBAACe,EAAA,EAAD,CACIC,QAAM,EACNd,QAASC,KAAKU,YACd1B,MAAO,CACHQ,QAAS,OACTC,cAAe,MAEfqB,WAAY,SACZpB,UAAW,GACXT,WAAY,GACZE,cAAe,KAEf,yBACID,OAAO,KACPgB,MAAM,KACNC,IAAI,aAAaC,IAAI,KACzB,wBACIP,UAAU,YACVb,MAAO,CACHkB,MAAO,OACPI,WAAY,KAJpB,oBAWR,6BAEH6B,EAAMpB,KAAI,SAACqB,EAAMnB,GACd,IAAMC,EAAOC,IAAOiB,EAAKC,WAAWhB,UAEpC,OACI,yBAAKC,IAAKL,GAGF,yBAAKjC,MAAO,CACJQ,QAAS,OACTC,cAAe,MACfG,eAAgB,eAChBmC,QAAS,KAET,0BACIlC,UAAU,YACVb,MAAO,CACHkB,MAAO,SAEX,uBAEIlB,MAAO,CACHgD,eAAgB,SAEpB,wBACAhD,MAAO,CAACiD,MAAO,YACbG,EAAKE,OAEX,2BAAG,0CAAgBpB,IACnB,2BAAIkB,EAAKZ,aACT,6BACA,kBAACe,EAAA,EAAD,CACIT,KAAMM,EAAKI,SACXxD,MAAO,CACHyD,cAAe,aACfC,QAAS,QAEbC,QAAQ,WACRC,UAAW,kBAAC,IAAD,OAPf,QAWA,kBAACL,EAAA,EAAD,CACIT,KAAMM,EAAKS,SACX7D,MAAO,CACHyD,cAAe,aACfC,QAAS,OACTpC,WAAY,IAEhBqC,QAAQ,WACRC,UAAW,kBAAC,IAAD,OARf,YAcZ,uC,GAjGbrC,aA2GJC,cAAW0B,G,0CCnGpBY,E,kDAEF,WAAYnE,GAAQ,IAAD,8BACf,cAAMA,IAUV+B,YAAc,WACVhC,YAAW,WAAO,EAAKC,MAAMC,QAAQC,KAAK,OAAO,MAZlC,EAenBkE,sBAAwB,WACpBrE,YAAW,WACP,EAAKsE,SAAS,CAAEC,4BAA4B,MAC7C,MAlBY,EAqBnBC,eAAiB,WACb,EAAKF,SAAS,CAAEC,4BAA4B,KAnB5C,EAAKE,MAAQ,CACTF,4BAA4B,GAGhC,EAAKC,eAAiB,EAAKA,eAAeE,KAApB,gBACtB,EAAKL,sBAAwB,EAAKA,sBAAsBK,KAA3B,gBARd,E,qDA0BKpD,KAAKrB,MAAjB0E,QACUrD,KAAKrB,MAAfwD,MAMR,OACI,yBAAKtC,UAAU,qFACX,yBAAKA,UAAU,qBAGX,kBAACe,EAAA,EAAD,CACIC,QAAM,EACNd,QAASC,KAAKU,YACd1B,MAAO,CACHQ,QAAS,OACTC,cAAe,MACfqB,WAAY,SACZpB,UAAW,GACXT,WAAY,GACZE,cAAe,KAEf,yBACID,OAAO,KACPgB,MAAM,KACNC,IAAI,gBAAgBC,IAAI,KAC5B,wBACIP,UAAU,YACVb,MAAO,CACHkB,MAAO,OACPI,WAAY,KAJpB,oBAUR,6BAEA,6BACI,kBAAC,kBAAD,CAAiBgD,KAAM,oBACnB,kBAAC1C,EAAA,EAAD,CACIb,QAASC,KAAK+C,sBACdlC,QAAM,EACN7B,MAAO,CACHQ,QAAS,OACTC,cAAe,MACfqB,WAAY,SACZiB,QAAS,KAET,yBACI7C,OAAO,KACPgB,MAAM,KACNC,IAAI,YAAYC,IAAI,KACxB,uBACIpB,MAAO,CACHgD,eAAgB,SAEpB,wBACIhD,MAAO,CACHkB,MAAO,OACPI,WAAY,GACZ2B,MAAO,YAJf,aAWhB,8BAnEI,CAChB,CAAEK,KAAM,SAAUiB,MAAO,aAAc9B,KAAM,8BAC7C,CAAEa,KAAM,SAAUiB,MAAO,aAAc9B,KAAM,6BAC7C,CAAEa,KAAM,WAAYiB,MAAO,eAAgB9B,KAAM,wCAmE5BV,KAAI,SAACyC,EAAYvC,GAAb,OACb,yBAAKK,IAAKL,GACN,kBAAC,EAAD,CACIqB,KAAMkB,EAAWlB,KACjBiB,MAAOC,EAAWD,MAClB9B,KAAM+B,EAAW/B,OAErB,iCAIR,kBAACgC,EAAA,EAAD,CACIC,KAAM1D,KAAKmD,MAAMF,2BACjBU,QAAS3D,KAAKkD,eACdU,iBAAkB,IAClBC,QAAQ,6BAER,kBAACC,EAAA,EAAD,CACI9E,MAAO,CACH+E,gBAAiB,UACjBC,WAAW,gCAEfH,QACI,8BACI,kBAAC,IAAD,CAAsB7E,MAAO,CAACqB,YAAa,MAD/C,sC,GA3HVE,aA2IhB0D,E,4MAEFC,sBAAwB,WACpBxF,YAAW,WACPkD,OAAOC,SAASC,KAAO,EAAKnD,MAAM8C,OACnC,M,uDAIH,OACI,kBAACb,EAAA,EAAD,CACIC,QAAM,EACNd,QAASC,KAAKkE,sBACdlF,MAAO,CACHQ,QAAS,OACTC,cAAe,MACfqB,WAAY,SACZiB,QAAS,KAET,yBACI7C,OAAO,KACPgB,MAAM,KACNC,IAAKH,KAAKrB,MAAM4E,MAAOnD,IAAI,KAC/B,uBACIpB,MAAO,CACHgD,eAAgB,SAEpB,wBACIhD,MAAO,CACHkB,MAAO,OACPI,WAAY,GACZ2B,MAAO,YAEVjC,KAAKrB,MAAM2D,Y,GAjCX/B,aAyCdC,cAAWsC,GCvLpBqB,E,uKAEE,OACI,yBAAKtE,UAAU,kBACX,yBAAKA,UAAU,eACf,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOuE,OAAK,EAACC,KAAK,KACd,kBAAC,EAAD,OAEJ,kBAAC,IAAD,CAAOA,KAAK,SACR,kBAAC,EAAD,CAAMlC,MAAOnC,KAAKrB,MAAMwD,SAE5B,kBAAC,IAAD,CAAOkC,KAAK,SACR,kBAAC,EAAD,CAAM1D,MAAOX,KAAKrB,MAAMgC,SAE5B,kBAAC,IAAD,CAAO0D,KAAK,YACR,kBAAC,EAAD,c,GAhBL9D,aAyBJC,cAAW2D,GCiFXG,G,wDAhHb,WAAY3F,GAAQ,IAAD,8BACjB,cAAMA,IACDwE,MAAQ,CACXhB,MAAO,GACPxB,MAAO,IAGT,EAAK4D,cAAgB,EAAKA,cAAcnB,KAAnB,gBACrB,EAAKoB,cAAgB,EAAKA,cAAcpB,KAAnB,gBARJ,E,gEAYjBpD,KAAKuE,gBACLvE,KAAKwE,kB,sCAGU,IAAD,OACdC,MAAM,gFACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GAEJC,QAAQC,IAAI,OAAQF,GACpB,IAAIlE,EAAQ,GACNqE,EAAQH,EAAKI,MAAMC,QAAO,SAAAC,GAAI,OAAIA,EAAKC,WAAWC,UACxDP,QAAQC,IAAI,QAASC,GACrBA,EAAMM,SAAQ,SAAAC,GACZ,IAAIC,EAAOD,EAAK/D,YACZiE,EAAMC,SAASC,cAAc,OACjCF,EAAIG,UAAYJ,EAKhB,IAHA,IACIhE,EADAqE,GADJL,EAAOC,EAAIK,WACWC,MAAM,MACXC,EAAI,GAEdxE,GAAewE,EAAIH,EAAWR,QACd,KAAlBQ,EAAWG,GACZA,IAEAxE,EAAcqE,EAAWG,GAI7B,IAAIC,EAAU,CACZ1E,MAAOgE,EAAKhE,MACZH,aAAcmE,EAAKW,QACnBzE,KAAM8D,EAAK9D,KACXD,YAAaA,GAEfb,EAAM9B,KAAKoH,MAIb,EAAKjD,SAAS,CAAErC,aAEjBwF,OAAM,SAAAC,GACLtB,QAAQC,IAAI,QAASqB,Q,sCAIV,IAAD,OAEd3B,MAAM,+CACHC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAvC,GAAK,OAAIA,EAAM+C,QAAO,SAAA9C,GAAI,MAHrB,UAGyBA,EAAKiE,MAAMC,YAC9C5B,MAAK,SAAA6B,GACJ,OAAOA,EAASxF,KAAI,SAAAyF,GAElB,MAAO,CAAEhE,SADgEgE,EAAjEhE,SACWF,KADsDkE,EAAvDlE,KACOO,SADgD2D,EAAjD3D,SACW4D,WADsCD,EAAvCC,WACapE,UAD0BmE,EAA3BnE,UACYb,YADegF,EAAhBhF,mBAI5DkD,MAAK,SAAAvC,GAAK,OAAIA,EAAMuE,MAAK,SAACC,EAAGC,GAG5B,OAFAD,EAAI,IAAIE,KAAKF,EAAEtE,YACfuE,EAAI,IAAIC,KAAKD,EAAEvE,YACJsE,QAEZjC,MAAK,SAAAvC,GACJ,EAAKa,SAAS,CAAEb,aAEjBgE,OAAM,SAAAC,GACLtB,QAAQC,IAAI,QAASqB,Q,+BAKzB,OAAGpG,KAAKmD,MAAMhB,MAAMkD,QAAUrF,KAAKmD,MAAMxC,MAAM0E,OAE3C,kBAAC,IAAD,CAAQyB,SAAUC,IAChB,kBAAC,EAAD,CACEpG,MAAOX,KAAKmD,MAAMxC,MAClBwB,MAAOnC,KAAKmD,MAAMhB,SAOtB,yBAAKtC,UAAU,kBACb,yBACEA,UAAU,cACVb,MAAO,CACLC,WAAY,SAEd,gD,GAtGMsB,cCKEyG,QACW,cAA7BpF,OAAOC,SAASoF,UAEe,UAA7BrF,OAAOC,SAASoF,UAEhBrF,OAAOC,SAASoF,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAS1B,SAAS2B,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM9C,MAAK,SAAA+C,GACjCA,EAAaC,kB","file":"static/js/main.06ccf702.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { \n  Link,\n  withRouter\n} from 'react-router-dom'\nimport IconButton from '@material-ui/core/IconButton';\nimport Typewriter from 'typewriter-effect';\n\n\nclass Home extends Component {\n\n  _linkToBlog = () => {\n    setTimeout(() => {this.props.history.push(\"/blog\")}, 250) \n  }\n\n  _linkToCode = () => {\n    setTimeout(() => {this.props.history.push(\"/code\")}, 250) \n  }\n\n  _linkToConnect = () => {\n    setTimeout(() => {this.props.history.push(\"/connect\")}, 250) \n  }\n\n  render() {\n    return(\n      <div>\n        {/* DESCRIPTION -- Using typewriter effect */}\n        <h2 \n          style={{\n            paddingTop: '20vh',\n            height: 140,\n            paddingBottom: 60\n          }}>\n            <Typewriter\n              options={{\n                strings: ['Hello Pratik here!', 'I am a CS student.', 'Please check out my work below!'],\n                autoStart: true,\n                loop: true,\n              }}\n            />\n        </h2>\n\n        <div \n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            marginTop: 40,\n            marginBottom: 40,\n            justifyContent: 'center',\n            // paddingTop: '30vh'\n        }}>\n\n        {/* CODE BUTTON */}\n\n        <span className=\"button-block\">\n          <IconButton \n            onClick={this._linkToCode}\n            style={{\n              background: '#fafbfc'\n            }}\n            className=\"buttons\">\n            <img\n            height=\"75\"\n            width=\"75\" \n            src=\"github.png\" alt=\"\"/>\n          </IconButton>\n          <h4 className=\"button-label\">Code</h4>\n        </span>\n\n        {/* BLOG BUTTON  */}\n        <span \n          style={{\n            marginRight: 40,\n            marginLeft: 40\n          }} \n          className=\"button-block\">\n          <IconButton \n            onClick={this._linkToBlog}\n            style={{\n              background: '#fafbfc'\n            }}\n            className=\"buttons\">\n            {/* <FontAwesomeIcon icon={faMediumM} size=\"3x\" /> */}\n            <img \n            height=\"80\"\n            width=\"80\"\n            src=\"medium.png\" alt=\"\"/>\n          </IconButton>\n          <h4 className=\"button-label\">Blog</h4>\n        </span>\n\n        {/* CONNECT BUTTON  */}\n        <span className=\"button-block\">\n              <IconButton \n                onClick={this._linkToConnect}\n                // target=\"_blank\"\n                style={{\n                  background: '#fafbfc'\n                }}\n                className=\"buttons\">\n                <img\n                height=\"75\"\n                width=\"75\" \n                src=\"messenger.png\" alt=\"\"/>\n              </IconButton>\n              <h4 className=\"button-label\">Connect</h4>\n            </span>\n\n      </div>\n\n\n      </div>\n        \n    )\n  }\n    \n}\n\nexport default withRouter(Home)","import React, { Component } from 'react'\nimport IconButton from '@material-ui/core/IconButton';\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props)\n        this._copyEmail = this._copyEmail.bind(this)\n    }\n\n    _copyEmail() {\n        console.log(\"copyEmail\")\n        document.execCommand(\"copy\");\n    }\n\n    render() {\n        return(\n            <div \n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              marginTop: 40,\n              marginBottom: 40\n            //   justifyContent: 'center',\n            \n            }}\n            >\n    \n    \n            <span className=\"button-block\">\n              <IconButton \n                href=\"https://github.com/bhprtk\"\n                target=\"_blank\"\n                style={{\n                  background: '#fafbfc'\n                }}\n                className=\"buttons\">\n                <img\n                height=\"75\"\n                width=\"75\" \n                src=\"linkedin.png\" alt=\"\"/>\n              </IconButton>\n              <h4 className=\"button-label\">LinkedIn</h4>\n            </span>\n    \n            <span \n              style={{\n                marginRight: 40,\n                marginLeft: 40\n              }} \n              className=\"button-block\">\n              <IconButton\n                onClick={this._copyEmail}\n                style={{\n                  background: '#fafbfc'\n                }}\n                className=\"buttons\">\n                <img \n                height=\"80\"\n                width=\"80\"\n                src=\"gmail.png\" alt=\"\"/>\n              </IconButton>\n              <h4 className=\"button-label\">Email</h4>\n            </span>\n    \n          </div>\n        )\n\n    }\n}\n\nexport default Contact","import React, { Component } from 'react'\nimport Breadcrumbs from '@material-ui/core/Breadcrumbs';\nimport { Link } from 'react-router-dom';\n\nclass BreadCrumbs extends Component {\n    render() {\n        return (\n            <Breadcrumbs>\n                <Link \n                    to=\"/\"\n                    style={{\n                        textDecoration: 'none'\n                    }}>\n                    Home\n                </Link>\n                <Link to=\"/code\">\n                    Code\n                </Link>\n            </Breadcrumbs>\n        )\n    }\n}\n\nexport default BreadCrumbs","import React, { Component } from 'react'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button';\n// import GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ListItem from '@material-ui/core/ListItem';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Blog extends Component {\n\n    _linkToHome = () => {\n        setTimeout(() => {this.props.history.push(\"/\")}, 250) \n    }\n\n    render() {\n        const { blogs } = this.props\n        return (\n            <div className=\"row justify-content-md-center justify-content-lg-center justify-content-xl-center\">\n                <div className=\"col-lg-8 col-xl-8\">\n                    {/* Header */}\n                    <ListItem \n                        button \n                        onClick={this._linkToHome}\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            // justifyContent: 'space-around',\n                            alignItems: 'center',\n                            marginTop: 20,\n                            paddingTop: 20,\n                            paddingBottom: 20\n                        }}>\n                        <img\n                            height=\"75\"\n                            width=\"75\" \n                            src=\"medium.png\" alt=\"\"/>\n                        <h2 \n                            className=\"text-left\"\n                            style={{\n                                width: '100%',\n                                marginLeft: 20,\n                                // paddingTop: 20\n                            }}>\n                            Recent Medium Posts\n\n                        </h2>\n                    </ListItem>\n                    <hr/>\n                    {blogs.map((blog, index) => {\n                        const date = moment(blog.published_at).fromNow()\n                        return (\n                            <div key={index}>\n                                <BlogItem \n                                    title={blog.title}\n                                    date={date}\n                                    description={blog.description}\n                                    link={blog.link}\n                                    />\n                                <hr/>\n                            </div>\n                        )\n                    })}\n                </div>\n            </div>\n        )\n    }\n}\n\nclass BlogItem extends Component {\n    \n    _linkToBlogLink = () => {\n        setTimeout(() => {\n            window.location.href = this.props.link; \n        }, 250) \n    }\n    \n    render() {\n        return (\n            <ListItem \n                button\n                onClick={this._linkToBlogLink}\n                style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    justifyContent: 'space-around',\n                    padding: 20,\n                }}>\n                <span \n                    className=\"text-left\"\n                    style={{\n                        width: '100%'\n                    }}>\n                    <a \n                        // href={repo.homepage}\n                        style={{\n                            textDecoration: 'none'\n                        }}>\n                        <h3 \n                        style={{color: '#047bfb'}}\n                        >{this.props.title}</h3>\n                    </a>\n                    <p><small>Posted {this.props.date}</small></p>\n                    <p>{this.props.description}</p>\n                </span>\n            </ListItem>\n        )\n    }\n}\n\nexport default withRouter(Blog)","import React, { Component } from 'react'\nimport moment from 'moment'\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ListItem from '@material-ui/core/ListItem';\nimport { withRouter } from 'react-router-dom';\n\n\nclass Code extends Component {\n\n    _linkToHome = () => {\n        setTimeout(() => {this.props.history.push(\"/\")}, 250) \n    }\n\n    render() {\n        const { repos } = this.props\n        return (\n            <div className=\"row justify-content-md-center justify-content-lg-center justify-content-xl-center\">\n                <div className=\"col-lg-8 col-xl-8\">\n\n                    {/* Header */}\n                    <ListItem \n                        button \n                        onClick={this._linkToHome}\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            // justifyContent: 'space-around',\n                            alignItems: 'center',\n                            marginTop: 20,\n                            paddingTop: 20,\n                            paddingBottom: 20\n                        }}>\n                            <img\n                                height=\"75\"\n                                width=\"75\" \n                                src=\"github.png\" alt=\"\"/>\n                            <h2 \n                                className=\"text-left\"\n                                style={{\n                                    width: '100%',\n                                    marginLeft: 20,\n                                    // paddingTop: 20\n                                }}>\n                                Code / Projects\n\n                            </h2>\n                    </ListItem>\n                    <hr/>\n\n                {repos.map((repo, index) => {\n                    const date = moment(repo.pushed_at).fromNow()\n                    // const date = moment(repo.pushed_at).format('MMM Do YYYY')\n                    return (\n                        <div key={index}>\n                         {/* <div key={index} className=\"row justify-content-md-center justify-content-lg-center justify-content-xl-center\"> */}\n                            {/* <div className=\"col-lg-8 col-md-8 col-xl-8\"> */}\n                                <div style={{\n                                        display: 'flex',\n                                        flexDirection: 'row',\n                                        justifyContent: 'space-around',\n                                        padding: 20,\n                                    }}>\n                                        <span \n                                            className=\"text-left\"\n                                            style={{\n                                                width: '100%'\n                                            }}>\n                                            <a \n                                                // href={repo.homepage}\n                                                style={{\n                                                    textDecoration: 'none'\n                                                }}>\n                                                <h3 \n                                                style={{color: '#047bfb'}}\n                                                >{repo.name}</h3>\n                                            </a>\n                                            <p><small>Updated {date}</small></p>\n                                            <p>{repo.description}</p>\n                                            <br/>\n                                            <Button \n                                                href={repo.homepage}\n                                                style={{\n                                                    textTransform: 'capitalize',\n                                                    outline: 'none',\n                                                }}\n                                                variant=\"outlined\"\n                                                startIcon={<LinkIcon />}\n                                                >\n                                                    Link\n                                            </Button>\n                                            <Button \n                                                href={repo.html_url}\n                                                style={{\n                                                    textTransform: 'capitalize',\n                                                    outline: 'none',\n                                                    marginLeft: 10,\n                                                }}\n                                                variant=\"outlined\"\n                                                startIcon={<GitHubIcon />}\n                                                >\n                                                    Github\n                                            </Button>\n                                        </span>\n                                </div>\n                                <hr/>\n                            </div>\n                    )\n                })}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Code)","import React, { Component } from 'react'\nimport moment from 'moment'\nimport { withRouter } from 'react-router-dom';\nimport {CopyToClipboard} from 'react-copy-to-clipboard';\n\n// Material UI Libraries\nimport Button from '@material-ui/core/Button';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkIcon from '@material-ui/icons/Link';\nimport ListItem from '@material-ui/core/ListItem';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport FileCopyOutlinedIcon from '@material-ui/icons/FileCopyOutlined';\nimport Tooltip from '@material-ui/core/Tooltip';\n\n\n\nclass Connect extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            justCopiedEmailToClipboard: false\n        }\n\n        this._closeSnackbar = this._closeSnackbar.bind(this)\n        this._copyEmailToClipboard = this._copyEmailToClipboard.bind(this)\n    }\n\n    _linkToHome = () => {\n        setTimeout(() => {this.props.history.push(\"/\")}, 250) \n    }\n\n    _copyEmailToClipboard = () => {\n        setTimeout(() => {\n            this.setState({ justCopiedEmailToClipboard: true })            \n        }, 250);\n    }\n\n    _closeSnackbar = () => {\n        this.setState({ justCopiedEmailToClipboard: false })\n    }\n\n    render() {\n        const { classes } = this.props\n        const { repos } = this.props\n        const connections = [\n            { name: \"Medium\", image: \"medium.png\", link: \"https://medium.com/@bhprtk\" },\n            { name: \"Github\", image: \"github.png\", link: \"https://github.com/bhprtk\" },\n            { name: \"Linkedin\", image: \"linkedin.png\", link: \"https://www.linkedin.com/in/bhprtk/\" },\n        ];\n        return (\n            <div className=\"row justify-content-md-center justify-content-lg-center justify-content-xl-center\">\n                <div className=\"col-lg-8 col-xl-8\">\n\n                    {/* Header */}\n                    <ListItem \n                        button \n                        onClick={this._linkToHome}\n                        style={{\n                            display: 'flex',\n                            flexDirection: 'row',\n                            alignItems: 'center',\n                            marginTop: 20,\n                            paddingTop: 20,\n                            paddingBottom: 20\n                        }}>\n                            <img\n                                height=\"75\"\n                                width=\"75\" \n                                src=\"messenger.png\" alt=\"\"/>\n                            <h2 \n                                className=\"text-left\"\n                                style={{\n                                    width: '100%',\n                                    marginLeft: 20,\n                                }}>\n                                Connect with me\n\n                            </h2>\n                    </ListItem>\n                    <hr/>\n                    \n                    <div>\n                        <CopyToClipboard text={\"bhprtk@gmail.com\"}>\n                            <ListItem \n                                onClick={this._copyEmailToClipboard}\n                                button \n                                style={{\n                                    display: 'flex',\n                                    flexDirection: 'row',\n                                    alignItems: 'center',\n                                    padding: 20,\n                                }}>\n                                    <img\n                                        height=\"75\"\n                                        width=\"75\" \n                                        src=\"gmail.png\" alt=\"\"/>\n                                    <a \n                                        style={{\n                                            textDecoration: 'none'\n                                        }}>\n                                        <h3 \n                                            style={{\n                                                width: '100%',\n                                                marginLeft: 20,\n                                                color: '#047bfb'\n                                            }}>\n                                            E-mail\n                                        </h3>\n                                    </a>\n                            </ListItem>                 \n                        </CopyToClipboard>\n                        <hr/>\n                    </div>\n                    \n                    {connections.map((connection, index) => (\n                        <div key={index}>\n                            <ConnectionItem \n                                name={connection.name}\n                                image={connection.image}\n                                link={connection.link}\n                            />\n                            <hr/>\n                        </div>\n                    ))}\n\n                    <Snackbar\n                        open={this.state.justCopiedEmailToClipboard}\n                        onClose={this._closeSnackbar}\n                        autoHideDuration={2000}\n                        message=\"Email copied to clipboard\" \n                        >\n                        <SnackbarContent\n                            style={{\n                                backgroundColor: '#616161',\n                                fontFamily: `'Source Code Pro', monospace`,      \n                            }}\n                            message={\n                                <span>\n                                    <FileCopyOutlinedIcon style={{marginRight: 10}}/>\n                                    Email copied to clipboard\n                                </span>\n                            }>\n                            \n                        </SnackbarContent>\n                    </Snackbar>\n\n                </div>\n\n            </div>\n        )\n    }\n}\n\nclass ConnectionItem extends Component {\n\n    _linkToConnectionLink = () => {\n        setTimeout(() => {\n            window.location.href = this.props.link; \n        }, 250) \n    }\n\n    render() {\n        return (\n            <ListItem \n                button \n                onClick={this._linkToConnectionLink}\n                style={{\n                    display: 'flex',\n                    flexDirection: 'row',\n                    alignItems: 'center',\n                    padding: 20,\n                }}>\n                    <img\n                        height=\"75\"\n                        width=\"75\" \n                        src={this.props.image} alt=\"\"/>\n                    <a \n                        style={{\n                            textDecoration: 'none'\n                        }}>\n                        <h3 \n                            style={{\n                                width: '100%',\n                                marginLeft: 20,\n                                color: '#047bfb'\n                            }}>\n                            {this.props.name}\n                        </h3>\n                    </a>\n            </ListItem>\n        )\n    }\n}\n\nexport default withRouter(Connect)","import React, { Component } from 'react'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    withRouter\n  } from \"react-router-dom\";\nimport Home from './Home'\nimport BreadCrumbs from './BreadCrumbs';\nimport Blog from './Blog'\nimport Code from './Code'\nimport Connect from './Connect'\n\nclass Main extends Component {\n    render() {\n        return (\n            <div className=\"container main\">\n                <div className=\"text-center\">\n                <Switch>\n                    <Route exact path=\"/\">\n                        <Home />\n                    </Route>\n                    <Route path=\"/code\">\n                        <Code repos={this.props.repos} />\n                    </Route>\n                    <Route path=\"/blog\">\n                        <Blog blogs={this.props.blogs} />\n                    </Route>\n                    <Route path=\"/connect\">\n                        <Connect />\n                    </Route>\n                </Switch>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default withRouter(Main)\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Work from './components/Home'\nimport Contact from './Contact'\nimport Main from './components/Main'\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      repos: [],\n      blogs: []\n    }\n\n    this.getGithubData = this.getGithubData.bind(this) \n    this.getMediumData = this.getMediumData.bind(this) \n  }\n\n  componentDidMount() {\n    this.getGithubData()\n    this.getMediumData()\n  }\n\n  getMediumData() {\n    fetch(\"https://api.rss2json.com/v1/api.json?rss_url=https://medium.com/feed/@bhprtk\")\n      .then(res => res.json())\n      .then(data => {\n        // posts are items from data array which have categories\n        console.log('data', data)\n        let blogs = [];\n        const posts = data.items.filter(item => item.categories.length)\n        console.log('posts', posts)\n        posts.forEach(post => {\n          let node = post.description\n          let tag = document.createElement('div')\n          tag.innerHTML = node\n          node = tag.innerText\n          let contentArr = node.split('\\n')\n          let description, i = 0\n\n          while(!description && i < contentArr.length) {\n            if(contentArr[i] === \"\") {\n              i++;\n            } else {\n              description = contentArr[i];\n            }\n          }\n\n          let blogObj = {\n            title: post.title,\n            published_at: post.pubDate,\n            link: post.link,\n            description: description\n          }\n          blogs.push(blogObj);\n        })\n\n        // console.log('blogs: ', blogs)\n        this.setState({ blogs })\n      })\n      .catch(error => {\n        console.log('error', error)\n      })\n  }\n  \n  getGithubData() {\n    const user = \"bhprtk\"\n    fetch(\"https://api.github.com/users/bhprtk/starred\")\n      .then(res => res.json())\n      .then(repos => repos.filter(repo => repo.owner.login == user))\n      .then(resRepos => {\n        return resRepos.map(resRepo => {\n          const { homepage, name, html_url, created_at, pushed_at, description } = resRepo\n          return { homepage, name, html_url, created_at, pushed_at, description }\n        })\n      })\n      .then(repos => repos.sort((a, b) => {\n        a = new Date(a.pushed_at)\n        b = new Date(b.pushed_at)\n        return b - a\n      }))\n      .then(repos => {\n        this.setState({ repos })\n      })\n      .catch(error => {\n        console.log('error', error)\n      })\n  }\n\n render() {\n    if(this.state.repos.length && this.state.blogs.length) {\n      return (\n        <Router basename={process.env.PUBLIC_URL}>\n          <Main \n            blogs={this.state.blogs}\n            repos={this.state.repos}\n            />\n          \n        </Router>\n      )  \n    } else {\n      return (\n        <div className=\"container main\">\n          <div \n            className=\"text-center\"\n            style={{\n              paddingTop: '40vh'\n            }}>\n            <h2>\n              Loading...\n            </h2>\n\n          </div>\n        </div>\n      )\n    }\n }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}